services:
  spring-boot-service:
    container_name: spring-boot-service
    build: ./spring-boot-service
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_URL=${POSTGRES_URL}
      - GOOGLE_ID_IOS=${GOOGLE_ID_IOS}
      - GOOGLE_ID_ANDROID=${GOOGLE_ID_ANDROID}
      - GOOGLE_ID_WEB=${GOOGLE_CLIENT_ID}
      - GOOGLE_SECRET_WEB=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REFRESH_WEB=${GOOGLE_CLIENT_REFRESH}
      - JWT_SECRET_FILE=/run/secrets/spring-boot-jwt-secret
    secrets:
      - spring-boot-jwt-secret
    ports:
      - "8080:8080"
    networks:
      - plant-my-study
    volumes:
      - ./spring-boot-service:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 120s
      # ? if the application shuts down during startup because it is marked as unhealthy,
      # ? increase the start_period in the Docker healthcheck. This gives the container
      # ? more time to start up before health checks begin.

  website:
    container_name: website
    build:
      context: ./website
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - spring-boot-service
    networks:
      - plant-my-study

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    # depends_on:
    #   - spring-boot-service
    depends_on:
      spring-boot-service:
        condition: service_healthy
    # ! to zmienic jak bedzie dobry healthcheck
    networks:
      - plant-my-study
    restart: on-failure

  postgres:
    container_name: postgres
    image: postgres:14.18
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_NAME=${POSTGRES_NAME}
    restart: unless-stopped
    volumes:
      - ./pg-data:/var/lib/postgresql/data
      - ./pg-dump:/docker-entrypoint-initdb.d
    networks:
      - plant-my-study

networks:
  plant-my-study:
    driver: bridge

secrets:
  spring-boot-jwt-secret:
    file: ./secrets/spring-boot-jwt
